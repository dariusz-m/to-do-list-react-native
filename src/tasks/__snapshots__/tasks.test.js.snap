// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tasks tests Tasks component renders correctly 1`] = `
<View>
  <Text
    style={
      Object {
        "fontWeight": "bold",
      }
    }
  >
    To Do List
  </Text>
  <View
    style={
      Object {
        "paddingBottom": 30,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        Add new Task: 
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        onChangeText={[Function]}
        placeholder="task..."
        secureTextEntry={false}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 0.2,
            "height": 40,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "blue",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 1,
          "task": "Just do it!",
        },
        Object {
          "id": 2,
          "task": "Go running!",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F5FCFF",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View>
            <Text>
              Just do it!
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                      Object {
                        "color": "blue",
                      },
                    ]
                  }
                >
                  Edit
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                      Object {
                        "color": "red",
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F5FCFF",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View>
            <Text>
              Go running!
            </Text>
            <View
              accessibilityComponentType="button"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                      Object {
                        "color": "blue",
                      },
                    ]
                  }
                >
                  Edit
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 18,
                        "padding": 8,
                        "textAlign": "center",
                      },
                      Object {
                        "color": "red",
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
